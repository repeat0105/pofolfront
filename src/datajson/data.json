{
  "skilldata": [
    {
      "id": 0,
      "img": "/imgs/htmlfff.png",
      "title": "HTML5",
      "content": "header, nav, div, main, footer, article, fivicon, mata 등의 사용을 할 수 있습니다."
    },
    {
      "id": 1,
      "img": "/imgs/cssthree.png",
      "title": "CSS3",
      "content": "display: flex, block, none를 사용할 수 있습니다. position:relative,absolute,fiexd와 transform을 사용 할 수 있습니다."
    },
    {
      "id": 2,
      "img": "/imgs/javascriptt.png",
      "title": "JAVASCRIPT",
      "content": "돔제어를 통해 style,classList를 추가하거나 삭제 할 수 있습니다. localStorage를 통해 데이터를 넘길수 있습니다. matchMedia를 통해 js로 반응형을 할 수 있습니다."
    },
    {
      "id": 3,
      "img": "/imgs/sass.png",
      "title": "SASS",
      "content": "중접문법을 사용 할 수 있고 @each를 통해 반복문을 사용 할 수 있고 maxin을 통해 @maxin, @include, @content를 사용해서 반응 형 작업을 할 수 있습니다."
    },
    {
      "id": 4,
      "img": "/imgs/jquery.png",
      "title": "JQUERY",
      "content": "fetch를 통해 데이터를 뿌려 줄 수 있습니다. "
    },
    {
      "id": 5,
      "img": "/imgs/figmaaaaa.png",
      "title": "FIGMA",
      "content": "화면을 구상하고 샘플 화면을 그릴 수 있습니다."
    },
    {
      "id": 6,
      "img": "/imgs/github.png",
      "title": "GITHUB",
      "content": "나의 프로젝트를 깃에 배포 할 수 있고 빌드와 디플로이를 통해 배포 할 수 있습니다."
    },
    {
      "id": 7,
      "img": "/logo192.png",
      "title": "REACT",
      "content": "- useState를 통해 화면을 랜더링 할 수 있습니다. useEffect를 통해 한번만 화면이 랜더링 되게 할 수 있습니다. react-router-dom을 통해 페이지 전환을 할 수 있고 id를 넘겨 받을 수 있습니다. zustand, redux로 상태관리 할 수 있습니다."
    },
    {
      "id": 8,
      "img": "/imgs/reduxx.png",
      "title": "REDUX",
      "content": "redux, zustand를 통해 데이터를  프롭드릴링이 되지 않고 state를 전역적으로 사용 할 수 있습니다."
    },
    {
      "id": 9,
      "img": "/imgs/typescript.png",
      "title": "TYPESCRIPT",
      "content": "데이터를 배열에 선언하고 type을 컴포넌트화하고 ,axios, zustand를 사용하여 crud를 할 수 있습니다."
    },
    {
      "id": 10,
      "img": "/imgs/mongodb.png",
      "title": "MONGODB",
      "content": "react, next14의 프론트에서 HTTP요청하면 node.js와 mongoDB를 연동하여 리뷰, 북마크기능 crud 할 때 구현해봤습니다."
    },
    {
      "id": 11,
      "img": "/imgs/cloudtype.png",
      "title": "CLOUDTYPE",
      "content": "서버의 지속적인 실행환경을 갖추기위해 node, mariadb를 배포해 봤습니다."
    },
    {
      "id": 12,
      "img": "/imgs/next.png",
      "title": "NEXT14",
      "content": "APPROUTER를 활용하여 페이지 이동 할 수 있고 vercel에 호스팅시 날씨와 서울 축제 OpenAPI의 cors에러가 있었습니다. NEXT14는 프론트에서 요청하면 서버에서 응답 할 때 HTTP에러를 자체적으로 잡아서 데이터를 프론트엔드에 보낸다는 것을 알게 되었습니다."
    },
    {
      "id": 13,
      "img": "/imgs/vercel.png",
      "title": "VERCEL",
      "content": "react, next14, vue 프로젝트를 배포해서 사용하고 있고 틈틈히 변경사항을 추가하고 있습니다."
    },
    {
      "id": 14,
      "img": "/imgs/next-auth.png",
      "title": "NEXT-AUTH",
      "content": "GIT 소셜로그인을 해보았고 로그인 상태일 때와 아닐때의 상태관리를 구현해 봤습니다."
    },
    {
      "id": 15,
      "img": "/imgs/zustand.png",
      "title": "ZUSTAND",
      "content": "redux, zustand를 통해 데이터를 프롭드릴링이 되지 않고 state를 전역적으로 사용 할 수 있습니다."
    },
    {
      "id": 15,
      "img": "/imgs/kakaomap.png",
      "title": "KAKAOMAP",
      "content": "위도와 경도를 서울 축제 API를 통해 받아서 동적으로 마커를 표기했습니다."
    },
    {
      "id": 16,
      "img": "/imgs/vue3.png",
      "title": "VUE3",
      "content": "웹 게임을 클론코딩하여 여러 게임을 구현해보았고 서버와 MYSQL을 연동하여 게시판을 구현해 보았습니다."
    },
    {
      "id": 17,
      "img": "/imgs/mysql.png",
      "title": "MYSQL",
      "content": "vue에서 HTTP메소드를 활용해 서버에 요청하면 서버에서 MYSQL로 쿼리문과 파라메터를 넘겨서 CRUD를 구현해봤습니다."
    }
  ],
  "workdata": [
    {
      "id": 0,
      "bigimg": "/nextpro/healingline3.jpg",
      "title": "HEALINGLINE",
      "titletxt": "힐링이 필요한 모든 직장인들에게 주말에 시간을 내서 좋은 기억과 사진을 남겨서 평일을 버티게 해줄 수 있는 사이트 입니다. ",
      "date": "2024. 2. 13 (1명)",
      "language": "Next.js, fortawesome, Sass, Axios, Mongodb, Next-auth, Swiper, Zustand, PWA, React-wabcam, Firebase",
      "img": "/nextpro/healingline2.png",
      "titleone": "목표:",
      "content": "기획과 디자인 - 밴치마킹(대한민국구석구석)으로 자료를 모으로 피그마로 샘플 페이지를 구현해 보면서 웹 사이트를 만들었습니다. 사용한 OpenAPI는 서울축제API, 날씨API, KAKAO MAP API이고  GitHub의 OAuth API를 사용했습니다.",
      "titletwo": "후기",
      "contenttwo": "그 동안 배운 내용을 기반으로 잡고 취업 전 할 수 있는 걸 다 해보고 이번 프로젝트에서는 오타, 이미배웠지만 생각이 안 나는 경우 등을 혼자 해결해 보면서 기존보다 코딩하는 시간이 더 걸려 보고 정말 모르는 내용 위주로 선생님께 물어 보았습니다. 이번 경험으로 혼자 해야 하는 이유를 알게 되었고 좀 더 많은 경험에 욕심이 생겼습니다.",
      "titlethree": "와이어프레임",
      "contentthree": "NEXT-AUTH를 활용해서 소셜로그인을 구현해봤고 서울축제API를 활용해서 데이터를 가공하고 실행시마다 최신 데이터를 가져오도록 구현하고 데이터에 북마크기능을 구현해서 MongoDB에 원하는 데이터를 저장하고 삭제해봤습니다. 서울축제API의 JSON데이터에 data.json의 추가로 데이터를 넣어서 디테일 페이지를 좀 더 구현해 봤습니다. 날씨API를 활용해서 실행시마다 최신 데이터를 가져와서 구현 했습니다. 카카오맵API를 활용해서 축제지역마다 위도와 경도를 받아서 동적으로 위치를 맵에 마킹하도록 구현했습니다. webcam을 활용해서 찍은 사진을 firebase에 저장하고 삭제하도록 구현했고 해당 기능은 vercel에 배포된 url에 들어가면 디테일 컨텐츠를 클릭해서 들어가면 후면으로 코딩된 카메라가 보여지고 버튼을 누르면 firebase에 저장됨과 동시에 저장된 이미지가 보여집니다.",
      "site": "https://nextprolast.vercel.app/",
      "github": "https://github.com/repeat0105/nextprolast.git"
    },
    {
      "id": 1,
      "bigimg": "/imgs/imagework.png",
      "title": "클리안",
      "titletxt": " it관련 유료강의 후기, 간단한 it지식의 정보를 파악하고 사용자가 유용하다고 생각되면 관련 사이트로 이동하는 사이트입니다.",
      "date": "2023. 12. 18 (1명)",
      "language": "Html5, Css3, sass, JavaScript, jQuery",
      "img": "/imgs/imageworkk.png",
      "titleone": "목표:",
      "content": "it지식의 필요성을 느끼고 바쁘게 살아가는 사람들 중 it관련 지식을 넓히고 싶어서 여러 유료사이트의 후기들을 모아 놓고 후기를 보면서 선택의 폭을 좁히고 해당 유료사이트로 이동해서 결제하고 강의를 듣고 좋은 경험을 했다면 이후에 있을 다른 후기를 보고 프론트엔드를 넘어 백엔드까지 파악하고 이후에 언어의 폭을 넓히는 것이 목표입니다.",
      "titletwo": "후기",
      "contenttwo": "기획을 해보고 자료와 이미지를 쌓고 퍼블리셔적인 업무를 배워보고 그 동안 배웠던 내용을 최대한 적용해서 ui/ux에 좀 더 익히게 되었습니다. localStorage, cookie, js matchMedia를 사용해 봤고 처음으로 혼자서 만든 프로젝트입니다.",
      "titlethree": "와이어프레임",
      "contentthree": "이미지 ui를 클릭하면 해당 정보가 있는 페이지로 이동 정보가 마음에 들었다면 해당사이트로 이동하거나 다른 정보를 더 볼 수있습니다. 사이드에 있는 icon에 따라서 보여지는 이미지가 구분됩니다.",
      "site": "https://repeat0105.github.io/cliening_one/",
      "github": "https://github.com/repeat0105/cliening_one.git"
    },
    {
      "id": 2,
      "bigimg": "/imgs/vuegame.png",
      "title": "웹게임모음",
      "titletxt": "web게임의 코드를 파악하고 직접 구현해보는 연습을 했습니다.",
      "date": "2023. 4. 1 (1명)",
      "language": "vue3,vue-router,vuex",
      "img": "/imgs/vueminegame.png",
      "titleone": "목표:",
      "content": "테트리스게임 만들어보기",
      "titletwo": "후기",
      "contenttwo": "알고리즘을 더욱 이해하게 되었습니다.",
      "titlethree": "와이어프레임",
      "contentthree": "메뉴 혹은 컨텐츠로 해당 게임으로 이동해서 진행 할 수 있습니다.",
      "site": "https://vueweb-psi.vercel.app",
      "github": "https://github.com/repeat0105/vueweb.git"
    }
  ]
}
